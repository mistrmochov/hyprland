#!/bin/bash

# The follwoing will attempt to install all needed packages to run Hyprland
# This is a quick and dirty script there are no error checking
# This script is meant to run on a clean fresh system
#
# Below is a list of the packages that would be installed
#
# hyprland: This is the Hyprland compositor
# kitty: This is the default terminal
# waybar: Waybar now has hyprland support
# swaybg: This is used to set a desktop background image
# swaylock-effects: This allows for the locking of the desktop its a fork that adds some editional visual effects
# wofi: This is an application launcher menu
# wlogout: This is a logout menu that allows for shutdown, reboot and sleep
# mako: This is a graphical notification daemon
# thunar: This is a graphical file manager
# ttf-jetbrains-mono-nerd: Som nerd fonts for icons and overall look
# noto-fonts-emoji: fonts needed by the weather script in the top bar
# polkit-gnome: needed to get superuser access on some graphical appliaction
# python-requests: needed for the weather module script to execute
# starship: allows to customize the shell prompt
# swappy: This is a screenshot editor tool
# grim: This is a screenshot tool it grabs images from a Wayland compositor
# slurp: This helps with screenshots, it selects a region in a Wayland compositor
# pamixer: This helps with audio settings such as volume
# brightnessctl: used to control monitor bright level
# gvfs: adds missing functionality to thunar such as automount usb drives
# bluez: the bluetooth service
# bluez-utils: command line utilities to interact with bluettoth devices
# lxappearance: used to set GTK theme
# xfce4-settings: set of tools for xfce, needed to set GTK theme
# dracula-gtk-theme: the Dracula theme, it fits the overall look and feel
# dracula-icons-git" set of icons to go with the Dracula theme
# xdg-desktop-portal-hyprland: xdg-desktop-portal backend for hyprland

#### Check for yay ####

echo "Updating system!"
sudo pacman -Syyu

ISYAY=/sbin/yay
if [ -f "$ISYAY" ]; then
    echo -e "yay was located, moving on.\n"
    yay -Suy
else
    echo -e "Installing yay"
    sudo pacman -S --needed git base-devel
    git clone https://aur.archlinux.org/yay.git
    cd yay
    makepkg -si
    yay -Y --gendb
    yay -Syu --devel
    yay -Y --devel --save
    yay -Syu
    cd ..
fi

echo "Installing chatotic-aur"
sudo pacman-key --recv-key 3056513887B78AEB --keyserver keyserver.ubuntu.com
sudo pacman-key --lsign-key 3056513887B78AEB
sudo pacman -U 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-keyring.pkg.tar.zst'
sudo pacman -U 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-mirrorlist.pkg.tar.zst'
sudo chown $USER /etc/pacman.conf
sleep 0.2
sudo echo "
[chaotic-aur]
Include = /etc/pacman.d/chaotic-mirrorlist" >>/etc/pacman.conf
sudo chown root /etc/pacman.conf
sleep 0.2
sudo pacman -Syu

echo "Adding archlinuxcn"
sudo chown $USER /etc/pacman.conf
sleep 0.2
sudo echo '
[archlinuxcn]
Server = https://repo.archlinuxcn.org/$arch' >>/etc/pacman.conf
sudo chown root /etc/pacman.conf
sleep 0.2
sudo pacman-key --lsign-key "farseerfc@archlinux.org"
sudo pacman -Sy && pacman -S archlinuxcn-keyring
sudo pacman -Syyu

### Disable wifi powersave mode ###
read -n1 -rep 'Would you like to disable wifi powersave? (y,n)' WIFI
if [[ $WIFI == "Y" || $WIFI == "y" ]]; then
    LOC="/etc/NetworkManager/conf.d/wifi-powersave.conf"
    echo -e "The following has been added to $LOC.\n"
    echo -e "[connection]\nwifi.powersave = 2" | sudo tee -a $LOC
    echo -e "\n"
    echo -e "Restarting NetworkManager service...\n"
    sudo systemctl restart NetworkManager
    sleep 3
fi

### Install all of the above pacakges ####
read -n1 -rep 'Would you like to install the packages? (y,n)' INST
if [[ $INST == "Y" || $INST == "y" ]]; then
    sudo pacman -S --needed hyprland kitty waybar \
        swaybg swaylock-effects wofi wlogout mako thunar \
        ttf-jetbrains-mono-nerd noto-fonts-emoji \
        polkit-gnome python-requests starship \
        swappy grim slurp pamixer brightnessctl gvfs \
        bluez bluez-utils lxappearance xfce4-settings \
        dracula-gtk-theme dracula-icons-git xdg-desktop-portal-hyprland floorp bash-completion neofetch wget

    # Start the bluetooth service
    echo -e "Starting the Bluetooth Service...\n"
    sudo systemctl enable --now bluetooth.service
    sleep 2

fi

read -n1 -rep 'Would you like to setup gdm login screnn? (y,n)' GDMSV
if [[ $GDMSV == "Y" || $GDMSV == "y" ]]; then
    sudo pacman -S --needed gdm
    echo "Starting gdm service"
    sudo systemctl enable --now gdm.service
    sleep 2

fi

### Copy Config Files ###
read -n1 -rep 'Would you like to copy config files? (y,n)' CFG
if [[ $CFG == "Y" || $CFG == "y" ]]; then
    echo -e "Copying config files...\n"
    cp -r hypr ~/.config/
    cp -r kitty ~/.config/
    cp -r mako ~/.config/
    cp -r waybar ~/.config/
    cp -r swaylock ~/.config/
    cp -r wofi ~/.config/
    cp -r wlogout ~/.config/
    if [ -d ~/Pictures ]; then
    mkdir ~/Pictures/Wallpapers
    else
    mkdir ~/Pictures
    mkdir ~/Pictures/Wallpapers
    fi
    wget https://storage.googleapis.com/imwomanhaha/pics.tar.gz
    tar -xf pics.tar.gz
    cp -r hihi ~/Pictures/
    cp -r Wallpapers ~/Pictures/
    wget https://storage.googleapis.com/imwomanhaha/scripts.tar.gz
    tar -xf scripts.tar.gz
    cp -r scripts ~/
    sudo chmod +x ~/scripts/
    sudo chmod +x ~/scripts/swaybgscr/
    # Set some files as exacutable
    chmod +x ~/.config/hypr/xdg-portal-hyprland
    chmod +x ~/.config/waybar/scripts/waybar-wttr.py
fi

### Install teh starship shell ###
read -n1 -rep 'Would you like to install the starship shell? (y,n)' STAR
if [[ $STAR == "Y" || $STAR == "y" ]]; then
    # install the starship shell
    echo -e "Updating .bashrc...\n"
    echo -e '\neval "$(starship init bash)"' >>~/.bashrc
    echo -e "copying starship config file to ~/.confg ...\n"
    cp starship.toml ~/.config/
fi

### Script is done ###
#XDG_RUNTIME_DIR="/tmp/runtime-${USER}"
#export XDG_RUNTIME_DIR

echo -e "Script had completed.\n"
echo -e "You can start Hyprland by typing Hyprland (note the capital H).\n"
read -n1 -rep 'Would you like to reboot now? (y,n)' HYP
if [[ $HYP == "Y" || $HYP == "y" ]]; then
    sudo reboot
else
    exit
fi

sudo reboot
