#!/bin/bash
OS=""
if [ -f "/etc/os-release" ]; then
    # Read the content of the /etc/os-release file
    source /etc/os-release
    # Check if the "ID" field is set
    if [ -n "$ID" ]; then
        OS=$ID
        if [ $OS = "arch" ]; then
            echo "Updating system!"
            sudo pacman -Syu --noconfirm
            ISYAY=/sbin/yay
            if [ -f "$ISYAY" ]; then
                echo -e "yay was located, moving on.\n"
                yay -Suy
            else
                echo -e "Installing yay"
                sudo pacman -S --needed --noconfirm git base-devel && git clone https://aur.archlinux.org/yay-bin.git && cd yay-bin && makepkg -si --noconfirm
                yay -Y --gendb
                yay -Syu --devel
                yay -Y --devel --save
                yay -Syu
                cd ..
            fi
            echo "Installing paru"
            yay -S paru-bin
            paru -Syu --noconfirm
            echo "Installing chaotic-aur"
            sudo pacman-key --recv-key 3056513887B78AEB --keyserver keyserver.ubuntu.com
            sudo pacman-key --lsign-key 3056513887B78AEB
            sudo pacman -U --noconfirm 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-keyring.pkg.tar.zst'
            sudo pacman -U --noconfirm 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-mirrorlist.pkg.tar.zst'
            sudo chown $USER /etc/pacman.conf
            sleep 0.2
            sudo echo "
[chaotic-aur]
Include = /etc/pacman.d/chaotic-mirrorlist" >>/etc/pacman.conf
            sudo chown root /etc/pacman.conf
            sleep 0.2
            sudo pacman -Syu

            echo "Adding archlinuxcn"
            sudo chown $USER /etc/pacman.conf
            sleep 0.2
            sudo echo '
[archlinuxcn]
Server = https://repo.archlinuxcn.org/$arch' >>/etc/pacman.conf
            sudo chown root /etc/pacman.conf
            sleep 0.2
            sudo pacman-key --lsign-key "farseerfc@archlinux.org"
            sudo pacman -Sy --noconfirm archlinuxcn-keyring
            sudo pacman -Syu
        fi

        ### Install all of the above pacakges ####
        read -n1 -rep 'Would you like to install the packages? (y,n)' INST
        if [[ $INST == "Y" || $INST == "y" ]]; then
            if [ $OS = "arch" ]; then
                sudo pacman -S --needed hyprland-git
                paru -S --needed --noconfirm kitty waybar \
                    swaybg swaylock-effects wofi wlogout mako nautilus \
                    ttf-jetbrains-mono-nerd noto-fonts-emoji \
                    polkit-gnome python-requests starship \
                    swappy grim slurp pamixer brightnessctl gvfs \
                    bluez bluez-utils lxappearance xfce4-settings \
                    dracula-gtk-theme dracula-icons-git xdg-desktop-portal-hyprland \
                    brave-bin bash-completion neofetch wget flatpak gnome-software waydroid \
                    gnome-calculator code hyprpicker scrcpy vlc grub-customizer \
                    linux-xanmod-anbox linux-xanmod-anbox-headers qt6ct nwg-look wget2 \
                    downloader-cli eza zoxide git android-tools neovim ostree appstream-glib

                sudo grub-mkconfig -o /boot/grub/grub.cfg
            elif [ $OS = "fedora" ]; then
                sudo dnf copr enable topazus/vscode -y
                sudo dnf update -y
                sudo dnf install -y hyprland waybar swaybg swaylock wlogout mako nautilus google-noto-emoji-fonts \
                    polkit-gnome python3-requests swappy pamixer gvfs bluez bluez-tools lxappearance xfce4-settings \
                    bash-completion fastfetch wget wget2 flatpak gnome-software waydroid gnome-calculator vlc qt6ct eza \
                    zoxide dnf-plugins-core python3 python3-pip pipx git cmake vscode android-tools neovim nano ostree \
                    libappstream-glib
                sudo dnf copr enable vineelsai/hypr -y
                sudo dnf copr enable tofik/nwg-shell -y
                sudo dnf update -y
                sudo dnf install hyprpicker nwg-look -y
                echo "Installing brave."
                sudo dnf config-manager --add-repo https://brave-browser-rpm-release.s3.brave.com/brave-browser.repo
                sudo rpm --import https://brave-browser-rpm-release.s3.brave.com/brave-core.asc
                sudo dnf update
                sudo dnf install -y brave-browser
                echo "Installing downloader-cli"
                pipx install downloader-cli
                zoxide init bash
                fastfetch --gen-config
            fi
            echo "Installing flatpak apps."
            flatpak install flathub com.simplenote.Simplenote com.moonlight_stream.Moonlight com.github.tchx84.Flatseal -y

            # Start the bluetooth service
            echo -e "Starting the Bluetooth Service...\n"
            sudo systemctl enable --now bluetooth.service
            sleep 2

        fi

        read -n1 -rep 'Would you like to setup gdm login screnn? (y,n)' GDMSV
        if [[ $GDMSV == "Y" || $GDMSV == "y" ]]; then
            if [ $OS = "fedora" ]; then
                sudo dnf install gdm -y
            elif [ $OS = "arch" ]; then
                sudo pacman -S --needed --noconfirm gdm
            fi
            echo "Starting gdm service"
            sudo systemctl enable gdm.service
            sleep 2
        fi

        ### Copy Config Files ###
        read -n1 -rep 'Would you like to copy config files? (y,n)' CFG
        if [[ $CFG == "Y" || $CFG == "y" ]]; then
            echo "Making needed directories!"
            if ! [ -d ~/.icons ]; then
                mkdir ~/.icons
            fi
            if ! [ -d ~/.themes ]; then
                mkdir ~/.themes
            fi
            if ! [ -d ~/.local/bin ]; then
                mkdir ~/.local/bin
            fi
            echo -e "Copying config files...\n"
            if [ $OS = "fedora" ]; then
                cp -r hypr-fc ~/.config/hypr
            elif [ $OS = "arch" ]; then
                cp -r hypr ~/.config/
            fi
            cp -r kitty ~/.config/
            cp -r mako ~/.config/
            cp -r waybar ~/.config/
            cp -r waybar2 ~/.config/
            cp -r swaylock ~/.config/
            cp -r wofi ~/.config/
            cp -r wlogout ~/.config/
            cp -r fastfetch ~/.config/
            if [ -d ~/Pictures ]; then
                echo "Pictures folder exists"
            else
                mkdir ~/Pictures
            fi
            dw https://mistrmochov.blob.core.windows.net/set-hypr/pics.tar.gz
            tar -xf pics.tar.gz
            mv hihi ~/Pictures/
            mv Wallpapers ~/Pictures/
            dw https://mistrmochov.blob.core.windows.net/set-hypr/scripts.tar.gz
            tar -xf scripts.tar.gz
            if [ -d ~/scripts ]; then
                echo "Scripts folder exists, skipping!"
            else
                mkdir ~/scripts
                mv scripts/* ~/scripts/
            fi
            chmod +x ~/scripts/hyprmodule.sh
            chmod +x ~/scripts/wayswitch.sh
            chmod +x ~/scripts/swaybgscr/hyprcheck.sh
            chmod +x ~/scripts/swaybgscr/swaybgscr.sh
            if [ $OS = "fedora" ]; then
                dw https://github.com/ryanoasis/nerd-fonts/releases/download/v3.2.1/JetBrainsMono.zip
                dw https://github.com/ryanoasis/nerd-fonts/releases/download/v3.2.1/Meslo.zip
                dw https://mistrmochov.blob.core.windows.net/set-hypr/themes/Dracula.tar.xz
                if ! [ -d ~/.fonts ]; then
                    mkdir ~/.fonts
                fi
                unzip JetBrainsMono.zip -d ~/.fonts/
                unzip Meslo.zip -d ~/.fonts/
                fc-cache -f -v
                tar -xf Dracula.tar.xz -C ~/.themes/
            fi
            dw https://mistrmochov.blob.core.windows.net/set-hypr/cursors/Bibata-Modern-Classic.tar.xz
            tar -xf Bibata-Modern-Classic.tar.xz -C ~/.icons/
            dw https://github.com/smack0007/stylepak/raw/master/stylepak ~/.local/bin/
            chmod +x ~/.local/bin/stylepak
        fi

        ### Install teh starship shell ###
        read -n1 -rep 'Would you like to install the starship shell? (y,n)' STAR
        if [[ $STAR == "Y" || $STAR == "y" ]]; then
            # install the starship shell
            echo -e "Updating .bashrc...\n"
            echo -e '\neval "$(starship init bash)"' >>~/.bashrc
            echo -e "copying starship config file to ~/.confg ...\n"
            cp starship.toml ~/.config/
        fi

        read -n1 -rep 'Would you like to install oh-my-posh? (y,n)' POSH
        if [[ $POSH == "Y" || $POSH == "y" ]]; then
            # install oh-my-posh
            curl -s https://ohmyposh.dev/install.sh | sudo bash -s
            if [ -d ~/posh ]; then
                echo "Posh dir exists, skipping!"
            else
                mkdir ~/posh
            fi
            wget https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/main/themes/catppuccin_mocha.omp.json
            mv catppuccin_mocha.omp.json ~/posh/
            echo '
# OhMyPosh
eval "$(oh-my-posh init bash --config /home/$USER/posh/catppuccin_mocha.omp.json)"' >>~/.bashrc
        fi

        read -n1 -rep 'Would you like to restore my .bashrc file? (y,n)' BASHRC
        if [[ $BASHRC == "Y" || $BASHRC == "y" ]]; then
            if [ $OS = "fedora" ]; then
                mv ~/.bashrc ~/.bashrc.bak
                mv bashrc-fc ~/.bashrc
            else
                mv ~/.bashrc ~/.bashrc.bak
                mv bashrc ~/.bashrc
            fi
        fi

        echo -e "Script had completed.\n"
        echo "After reboot, choose your GTK theme (Dracula) and then copy gtk4 files to .config/gtk4. Also make sure that \
        .local/bin is in your PATH. Then run stylepak install-system to convert it to flatpak theme. Then you can use flatseal \
        to force use the theme."
        read -n1 -rep 'Would you like to reboot now? (y,n)' HYP
        if [[ $HYP == "Y" || $HYP == "y" ]]; then
            sudo reboot
        else
            exit
        fi
    else
        echo "Unable to determine the distribution."
    fi
else
    echo "The /etc/os-release file does not exist. Unable to determine the distribution."
fi
